{"ast":null,"code":"var _jsxFileName = \"/Users/viv/Desktop/facerecognitionbrain/facerecognitionbrain/src/components/CreateParticles/CreateParticles.js\",\n  _s = $RefreshSig$();\nimport React, { useCallback } from \"react\";\nimport Particles from \"react-tsparticles\";\n// import { loadSlim } from \"tsparticles-slim\";\nimport { loadFull } from \"tsparticles\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst CreateParticles = () => {\n  _s();\n  const particlesInit = useCallback(async engine => {\n    console.log(engine);\n    // you can initiate the tsParticles instance (engine) here, adding custom shapes or presets\n    // this loads the tsparticles package bundle, it's the easiest method for getting everything ready\n    // starting from v2 you can add only the features you need reducing the bundle size\n    //await loadFull(engine);\n    await loadFull(engine);\n  }, []);\n  const particlesLoaded = useCallback(async container => {\n    await console.log(container);\n  }, []);\n  return /*#__PURE__*/_jsxDEV(Particles, {\n    id: \"tsparticles\",\n    url: \"http://foo.bar/particles.json\",\n    init: particlesInit,\n    loaded: particlesLoaded\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 21,\n    columnNumber: 5\n  }, this);\n};\n_s(CreateParticles, \"PjleD03JXt5mR6AE5+SxrsWvXBc=\");\n_c = CreateParticles;\nexport default CreateParticles;\nvar _c;\n$RefreshReg$(_c, \"CreateParticles\");","map":{"version":3,"names":["React","useCallback","Particles","loadFull","jsxDEV","_jsxDEV","CreateParticles","_s","particlesInit","engine","console","log","particlesLoaded","container","id","url","init","loaded","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["/Users/viv/Desktop/facerecognitionbrain/facerecognitionbrain/src/components/CreateParticles/CreateParticles.js"],"sourcesContent":["import React, { useCallback } from \"react\";\nimport Particles from \"react-tsparticles\";\n// import { loadSlim } from \"tsparticles-slim\";\nimport { loadFull } from \"tsparticles\";\n\nconst CreateParticles = () => {\n  const particlesInit = useCallback(async (engine) => {\n    console.log(engine);\n    // you can initiate the tsParticles instance (engine) here, adding custom shapes or presets\n    // this loads the tsparticles package bundle, it's the easiest method for getting everything ready\n    // starting from v2 you can add only the features you need reducing the bundle size\n    //await loadFull(engine);\n    await loadFull(engine);\n  }, []);\n\n  const particlesLoaded = useCallback(async (container) => {\n    await console.log(container);\n  }, []);\n\n  return (\n    <Particles\n      id=\"tsparticles\"\n      url=\"http://foo.bar/particles.json\"\n      init={particlesInit}\n      loaded={particlesLoaded}\n    />\n  );\n};\n\nexport default CreateParticles;\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,WAAW,QAAQ,OAAO;AAC1C,OAAOC,SAAS,MAAM,mBAAmB;AACzC;AACA,SAASC,QAAQ,QAAQ,aAAa;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAEvC,MAAMC,eAAe,GAAGA,CAAA,KAAM;EAAAC,EAAA;EAC5B,MAAMC,aAAa,GAAGP,WAAW,CAAC,MAAOQ,MAAM,IAAK;IAClDC,OAAO,CAACC,GAAG,CAACF,MAAM,CAAC;IACnB;IACA;IACA;IACA;IACA,MAAMN,QAAQ,CAACM,MAAM,CAAC;EACxB,CAAC,EAAE,EAAE,CAAC;EAEN,MAAMG,eAAe,GAAGX,WAAW,CAAC,MAAOY,SAAS,IAAK;IACvD,MAAMH,OAAO,CAACC,GAAG,CAACE,SAAS,CAAC;EAC9B,CAAC,EAAE,EAAE,CAAC;EAEN,oBACER,OAAA,CAACH,SAAS;IACRY,EAAE,EAAC,aAAa;IAChBC,GAAG,EAAC,+BAA+B;IACnCC,IAAI,EAAER,aAAc;IACpBS,MAAM,EAAEL;EAAgB;IAAAM,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACzB,CAAC;AAEN,CAAC;AAACd,EAAA,CAtBID,eAAe;AAAAgB,EAAA,GAAfhB,eAAe;AAwBrB,eAAeA,eAAe;AAAC,IAAAgB,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}