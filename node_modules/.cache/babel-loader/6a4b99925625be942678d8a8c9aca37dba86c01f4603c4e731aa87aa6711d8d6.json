{"ast":null,"code":"var _jsxFileName = \"/Users/viv/Desktop/VS_Code_Projects/facerecognitionbrain/facerecognitionbrain/src/App.js\";\nimport React, { Component } from \"react\";\nimport Navigation from \"./components/Navigation/Navigation.js\";\nimport Logo from \"./components/Logo/Logo.js\";\nimport ImageLinkForm from \"./components/ImageLinkForm/ImageLinkForm.js\";\nimport FaceRecognition from \"./components/FaceRecognition/FaceRecognition.js\";\nimport Rank from \"./components/Rank/Rank.js\";\nimport CreateParticles from \"./components/CreateParticles/CreateParticles.js\";\nimport Signin from \"./components/Signin/Signin.js\";\nimport Register from \"./components/Register/Register.js\";\nimport \"./App.css\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nclass App extends Component {\n  constructor() {\n    super();\n    this.loadUser = ([data]) => {\n      this.setState({\n        user: {\n          id: data.id,\n          name: data.name,\n          email: data.email,\n          entries: data.entries,\n          joined: data.joined\n        }\n      });\n    };\n    // componentDidMount() {\n    //   fetch(\"http://localhost:3000\")\n    //     .then((response) => response.json())\n    //     .then(console.log);\n    // }\n    this.calculateFaceLocation = data => {\n      const clarifaiFace = data.outputs[0].data.regions[0].region_info.bounding_box;\n      console.log(\"bounding box: \");\n      console.log(clarifaiFace);\n      const image = document.getElementById(\"inputimage\");\n      const width = Number(image.width);\n      const height = Number(image.height);\n      return {\n        leftCol: clarifaiFace.left_col * width,\n        topRow: clarifaiFace.top_row * height,\n        rightCol: width - clarifaiFace.right_col * width,\n        bottomRow: height - clarifaiFace.bottom_row * height\n      };\n    };\n    this.displayFaceBox = box => {\n      console.log(\"box locations: \");\n      console.log(box);\n      this.setState({\n        box: box\n      });\n    };\n    this.onInputChange = event => {\n      this.setState({\n        input: event.target.value\n      });\n    };\n    this.onButtonSubmit = () => {\n      this.setState({\n        imageUrl: this.state.input\n      });\n\n      // Your PAT (Personal Access Token) can be found in the portal under Authentification\n      const PAT = \"dd8338a53dd14e37b62efe467a043013\";\n      // Specify the correct user_id/app_id pairings\n      // Since you're making inferences outside your app's scope\n      const USER_ID = \"vivanc\";\n      const APP_ID = \"my-first-application-eae66n\";\n      // Change these to whatever model and image URL you want to use\n      const MODEL_ID = \"face-detection\";\n      // const MODEL_VERSION_ID = \"\";\n      // \"https://api.clarifai.com/v2/models/face-detection/outputs\";\n      const IMAGE_URL = this.state.input;\n      const raw = JSON.stringify({\n        user_app_id: {\n          user_id: USER_ID,\n          app_id: APP_ID\n        },\n        inputs: [{\n          data: {\n            image: {\n              url: IMAGE_URL\n            }\n          }\n        }]\n      });\n      const requestOptions = {\n        method: \"POST\",\n        headers: {\n          Accept: \"application/json\",\n          Authorization: \"Key \" + PAT\n        },\n        body: raw\n      };\n      fetch(\"https://api.clarifai.com/v2/models/\" + MODEL_ID +\n      // \"/versions/\" +\n      // MODEL_VERSION_ID +f\n      \"/outputs\", requestOptions).then(response => response.json()).then(result => {\n        console.log(result);\n        if (result) {\n          fetch(\"http://localhost:3000/image\", {\n            method: \"put\",\n            headers: {\n              \"Content-Type\": \"application/json\"\n            },\n            body: JSON.stringify({\n              id: this.state.user.id\n            })\n          }).then(response => response.json()).then(count => {\n            this.setState({\n              user: {\n                entries: count\n              }\n            });\n          });\n        }\n        this.displayFaceBox(this.calculateFaceLocation(result));\n      }).catch(error => console.log(\"error\", error));\n    };\n    this.onRouteChange = route => {\n      if (route === \"signout\") {\n        this.setState({\n          isSignIn: false\n        });\n      } else if (route === \"home\") {\n        this.setState({\n          isSignIn: true\n        });\n      }\n      this.setState({\n        route: route\n      });\n    };\n    this.state = {\n      input: \"\",\n      imageUrl: \"\",\n      box: {},\n      route: \"signin\",\n      isSignIn: false,\n      user: {\n        id: \"\",\n        name: \"\",\n        email: \"\",\n        entries: 0,\n        joined: \"\"\n      }\n    };\n  }\n  render() {\n    const {\n      isSignIn,\n      imageUrl,\n      route,\n      box\n    } = this.state;\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"App\",\n      children: [/*#__PURE__*/_jsxDEV(CreateParticles, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 161,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Navigation, {\n        isSignIn: isSignIn,\n        onRouteChange: this.onRouteChange\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 162,\n        columnNumber: 9\n      }, this), this.state.route === \"home\" ? /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(Logo, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 165,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(Rank, {\n          username: this.state.user.name,\n          userentries: this.state.user.entries\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 166,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(ImageLinkForm, {\n          onInputChange: this.onInputChange,\n          onButtonSubmit: this.onButtonSubmit\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 170,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(FaceRecognition, {\n          box: box,\n          imageUrl: imageUrl\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 174,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 164,\n        columnNumber: 11\n      }, this) : route === \"signin\" ? /*#__PURE__*/_jsxDEV(Signin, {\n        onRouteChange: this.onRouteChange,\n        loadUser: this.loadUser\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 177,\n        columnNumber: 11\n      }, this) : /*#__PURE__*/_jsxDEV(Register, {\n        onRouteChange: this.onRouteChange,\n        loadUser: this.loadUser\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 179,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 160,\n      columnNumber: 7\n    }, this);\n  }\n}\nexport default App;","map":{"version":3,"names":["React","Component","Navigation","Logo","ImageLinkForm","FaceRecognition","Rank","CreateParticles","Signin","Register","jsxDEV","_jsxDEV","App","constructor","loadUser","data","setState","user","id","name","email","entries","joined","calculateFaceLocation","clarifaiFace","outputs","regions","region_info","bounding_box","console","log","image","document","getElementById","width","Number","height","leftCol","left_col","topRow","top_row","rightCol","right_col","bottomRow","bottom_row","displayFaceBox","box","onInputChange","event","input","target","value","onButtonSubmit","imageUrl","state","PAT","USER_ID","APP_ID","MODEL_ID","IMAGE_URL","raw","JSON","stringify","user_app_id","user_id","app_id","inputs","url","requestOptions","method","headers","Accept","Authorization","body","fetch","then","response","json","result","count","catch","error","onRouteChange","route","isSignIn","render","className","children","fileName","_jsxFileName","lineNumber","columnNumber","username","userentries"],"sources":["/Users/viv/Desktop/VS_Code_Projects/facerecognitionbrain/facerecognitionbrain/src/App.js"],"sourcesContent":["import React, { Component } from \"react\";\nimport Navigation from \"./components/Navigation/Navigation.js\";\nimport Logo from \"./components/Logo/Logo.js\";\nimport ImageLinkForm from \"./components/ImageLinkForm/ImageLinkForm.js\";\nimport FaceRecognition from \"./components/FaceRecognition/FaceRecognition.js\";\nimport Rank from \"./components/Rank/Rank.js\";\nimport CreateParticles from \"./components/CreateParticles/CreateParticles.js\";\nimport Signin from \"./components/Signin/Signin.js\";\nimport Register from \"./components/Register/Register.js\";\nimport \"./App.css\";\n\nclass App extends Component {\n  constructor() {\n    super();\n    this.state = {\n      input: \"\",\n      imageUrl: \"\",\n      box: {},\n      route: \"signin\",\n      isSignIn: false,\n      user: {\n        id: \"\",\n        name: \"\",\n        email: \"\",\n        entries: 0,\n        joined: \"\",\n      },\n    };\n  }\n\n  loadUser = ([data]) => {\n    this.setState({\n      user: {\n        id: data.id,\n        name: data.name,\n        email: data.email,\n        entries: data.entries,\n        joined: data.joined,\n      },\n    });\n  };\n\n  // componentDidMount() {\n  //   fetch(\"http://localhost:3000\")\n  //     .then((response) => response.json())\n  //     .then(console.log);\n  // }\n\n  calculateFaceLocation = (data) => {\n    const clarifaiFace =\n      data.outputs[0].data.regions[0].region_info.bounding_box;\n    console.log(\"bounding box: \");\n    console.log(clarifaiFace);\n    const image = document.getElementById(\"inputimage\");\n    const width = Number(image.width);\n    const height = Number(image.height);\n    return {\n      leftCol: clarifaiFace.left_col * width,\n      topRow: clarifaiFace.top_row * height,\n      rightCol: width - clarifaiFace.right_col * width,\n      bottomRow: height - clarifaiFace.bottom_row * height,\n    };\n  };\n\n  displayFaceBox = (box) => {\n    console.log(\"box locations: \");\n    console.log(box);\n    this.setState({ box: box });\n  };\n\n  onInputChange = (event) => {\n    this.setState({ input: event.target.value });\n  };\n\n  onButtonSubmit = () => {\n    this.setState({ imageUrl: this.state.input });\n\n    // Your PAT (Personal Access Token) can be found in the portal under Authentification\n    const PAT = \"dd8338a53dd14e37b62efe467a043013\";\n    // Specify the correct user_id/app_id pairings\n    // Since you're making inferences outside your app's scope\n    const USER_ID = \"vivanc\";\n    const APP_ID = \"my-first-application-eae66n\";\n    // Change these to whatever model and image URL you want to use\n    const MODEL_ID = \"face-detection\";\n    // const MODEL_VERSION_ID = \"\";\n    // \"https://api.clarifai.com/v2/models/face-detection/outputs\";\n    const IMAGE_URL = this.state.input;\n\n    const raw = JSON.stringify({\n      user_app_id: {\n        user_id: USER_ID,\n        app_id: APP_ID,\n      },\n      inputs: [\n        {\n          data: {\n            image: {\n              url: IMAGE_URL,\n            },\n          },\n        },\n      ],\n    });\n\n    const requestOptions = {\n      method: \"POST\",\n      headers: {\n        Accept: \"application/json\",\n        Authorization: \"Key \" + PAT,\n      },\n      body: raw,\n    };\n\n    fetch(\n      \"https://api.clarifai.com/v2/models/\" +\n        MODEL_ID +\n        // \"/versions/\" +\n        // MODEL_VERSION_ID +f\n        \"/outputs\",\n      requestOptions\n    )\n      .then((response) => response.json())\n      .then((result) => {\n        console.log(result);\n        if (result) {\n          fetch(\"http://localhost:3000/image\", {\n            method: \"put\",\n            headers: { \"Content-Type\": \"application/json\" },\n            body: JSON.stringify({\n              id: this.state.user.id,\n            }),\n          })\n            .then((response) => response.json())\n            .then((count) => {\n              this.setState({\n                user: {\n                  entries: count,\n                },\n              });\n            });\n        }\n        this.displayFaceBox(this.calculateFaceLocation(result));\n      })\n      .catch((error) => console.log(\"error\", error));\n  };\n\n  onRouteChange = (route) => {\n    if (route === \"signout\") {\n      this.setState({ isSignIn: false });\n    } else if (route === \"home\") {\n      this.setState({ isSignIn: true });\n    }\n    this.setState({ route: route });\n  };\n\n  render() {\n    const { isSignIn, imageUrl, route, box } = this.state;\n    return (\n      <div className=\"App\">\n        <CreateParticles />\n        <Navigation isSignIn={isSignIn} onRouteChange={this.onRouteChange} />\n        {this.state.route === \"home\" ? (\n          <div>\n            <Logo />\n            <Rank\n              username={this.state.user.name}\n              userentries={this.state.user.entries}\n            />\n            <ImageLinkForm\n              onInputChange={this.onInputChange}\n              onButtonSubmit={this.onButtonSubmit}\n            />\n            <FaceRecognition box={box} imageUrl={imageUrl} />\n          </div>\n        ) : route === \"signin\" ? (\n          <Signin onRouteChange={this.onRouteChange} loadUser={this.loadUser} />\n        ) : (\n          <Register\n            onRouteChange={this.onRouteChange}\n            loadUser={this.loadUser}\n          />\n        )}\n      </div>\n    );\n  }\n}\n\nexport default App;\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}