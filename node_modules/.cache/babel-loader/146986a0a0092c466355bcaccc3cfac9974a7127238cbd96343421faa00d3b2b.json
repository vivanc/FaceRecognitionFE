{"ast":null,"code":"var _jsxFileName = \"/Users/viv/Desktop/facerecognitionbrain/facerecognitionbrain/src/App.js\";\nimport React, { Component } from \"react\";\nimport Navigation from \"./components/Navigation/Navigation.js\";\nimport Logo from \"./components/Logo/Logo.js\";\nimport ImageLinkForm from \"./components/ImageLinkForm/ImageLinkForm.js\";\nimport FaceRecognition from \"./components/FaceRecognition/FaceRecognition.js\";\nimport Rank from \"./components/Rank/Rank.js\";\nimport CreateParticles from \"./components/CreateParticles/CreateParticles.js\";\nimport \"./App.css\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nclass App extends Component {\n  constructor() {\n    super();\n    this.onInputChange = event => {\n      this.setState({\n        input: event.target.value\n      });\n    };\n    this.onButtonSubmit = () => {\n      this.setState({\n        imageUrl: this.state.input\n      });\n\n      ///////////////////////////////////////////////////////////////////////////////////////////////////\n      // In this section, we set the user authentication, user and app ID, model details, and the URL\n      // of the image we want as an input. Change these strings to run your own example.\n      //////////////////////////////////////////////////////////////////////////////////////////////////\n\n      // Your PAT (Personal Access Token) can be found in the portal under Authentification\n      const PAT = \"dd8338a53dd14e37b62efe467a043013\";\n      // Specify the correct user_id/app_id pairings\n      // Since you're making inferences outside your app's scope\n      const USER_ID = \"vivanc\";\n      const APP_ID = \"my-first-application-eae66n\";\n      // Change these to whatever model and image URL you want to use\n      const MODEL_ID = \"face-detection\";\n      const MODEL_VERSION_ID = \"https://api.clarifai.com/v2/models/face-detection/outputs\";\n      const IMAGE_URL = this.state.imageUrl;\n\n      ///////////////////////////////////////////////////////////////////////////////////\n      // YOU DO NOT NEED TO CHANGE ANYTHING BELOW THIS LINE TO RUN THIS EXAMPLE\n      ///////////////////////////////////////////////////////////////////////////////////\n\n      const raw = JSON.stringify({\n        user_app_id: {\n          user_id: USER_ID,\n          app_id: APP_ID\n        },\n        inputs: [{\n          data: {\n            image: {\n              url: IMAGE_URL\n            }\n          }\n        }]\n      });\n      const requestOptions = {\n        method: \"POST\",\n        headers: {\n          Accept: \"application/json\",\n          Authorization: \"Key \" + PAT\n        },\n        body: raw\n      };\n\n      // NOTE: MODEL_VERSION_ID is optional, you can also call prediction with the MODEL_ID only\n      // https://api.clarifai.com/v2/models/{YOUR_MODEL_ID}/outputs\n      // this will default to the latest version_id\n\n      fetch(\"https://api.clarifai.com/v2/models/\" + MODEL_ID + \"/versions/\" + MODEL_VERSION_ID + \"/outputs\", requestOptions).then(response => response.text()).then(result => console.log(result)).catch(error => console.log(\"error\", error));\n    };\n    this.state = {\n      input: \"\",\n      imageUrl: \"\"\n    };\n  }\n  render() {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"App\",\n      children: [/*#__PURE__*/_jsxDEV(CreateParticles, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 92,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Navigation, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 93,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Logo, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 94,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Rank, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 95,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(ImageLinkForm, {\n        onInputChange: this.onInputChange,\n        onButtonSubmit: this.onButtonSubmit\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 96,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(FaceRecognition, {\n        imageUrl: this.state.imageUrl\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 100,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 91,\n      columnNumber: 7\n    }, this);\n  }\n}\nexport default App;","map":{"version":3,"names":["React","Component","Navigation","Logo","ImageLinkForm","FaceRecognition","Rank","CreateParticles","jsxDEV","_jsxDEV","App","constructor","onInputChange","event","setState","input","target","value","onButtonSubmit","imageUrl","state","PAT","USER_ID","APP_ID","MODEL_ID","MODEL_VERSION_ID","IMAGE_URL","raw","JSON","stringify","user_app_id","user_id","app_id","inputs","data","image","url","requestOptions","method","headers","Accept","Authorization","body","fetch","then","response","text","result","console","log","catch","error","render","className","children","fileName","_jsxFileName","lineNumber","columnNumber"],"sources":["/Users/viv/Desktop/facerecognitionbrain/facerecognitionbrain/src/App.js"],"sourcesContent":["import React, { Component } from \"react\";\nimport Navigation from \"./components/Navigation/Navigation.js\";\nimport Logo from \"./components/Logo/Logo.js\";\nimport ImageLinkForm from \"./components/ImageLinkForm/ImageLinkForm.js\";\nimport FaceRecognition from \"./components/FaceRecognition/FaceRecognition.js\";\nimport Rank from \"./components/Rank/Rank.js\";\nimport CreateParticles from \"./components/CreateParticles/CreateParticles.js\";\nimport \"./App.css\";\n\nclass App extends Component {\n  constructor() {\n    super();\n    this.state = {\n      input: \"\",\n      imageUrl: \"\",\n    };\n  }\n\n  onInputChange = (event) => {\n    this.setState({ input: event.target.value });\n  };\n\n  onButtonSubmit = () => {\n    this.setState({ imageUrl: this.state.input });\n\n    ///////////////////////////////////////////////////////////////////////////////////////////////////\n    // In this section, we set the user authentication, user and app ID, model details, and the URL\n    // of the image we want as an input. Change these strings to run your own example.\n    //////////////////////////////////////////////////////////////////////////////////////////////////\n\n    // Your PAT (Personal Access Token) can be found in the portal under Authentification\n    const PAT = \"dd8338a53dd14e37b62efe467a043013\";\n    // Specify the correct user_id/app_id pairings\n    // Since you're making inferences outside your app's scope\n    const USER_ID = \"vivanc\";\n    const APP_ID = \"my-first-application-eae66n\";\n    // Change these to whatever model and image URL you want to use\n    const MODEL_ID = \"face-detection\";\n    const MODEL_VERSION_ID =\n      \"https://api.clarifai.com/v2/models/face-detection/outputs\";\n    const IMAGE_URL = this.state.imageUrl;\n\n    ///////////////////////////////////////////////////////////////////////////////////\n    // YOU DO NOT NEED TO CHANGE ANYTHING BELOW THIS LINE TO RUN THIS EXAMPLE\n    ///////////////////////////////////////////////////////////////////////////////////\n\n    const raw = JSON.stringify({\n      user_app_id: {\n        user_id: USER_ID,\n        app_id: APP_ID,\n      },\n      inputs: [\n        {\n          data: {\n            image: {\n              url: IMAGE_URL,\n            },\n          },\n        },\n      ],\n    });\n\n    const requestOptions = {\n      method: \"POST\",\n      headers: {\n        Accept: \"application/json\",\n        Authorization: \"Key \" + PAT,\n      },\n      body: raw,\n    };\n\n    // NOTE: MODEL_VERSION_ID is optional, you can also call prediction with the MODEL_ID only\n    // https://api.clarifai.com/v2/models/{YOUR_MODEL_ID}/outputs\n    // this will default to the latest version_id\n\n    fetch(\n      \"https://api.clarifai.com/v2/models/\" +\n        MODEL_ID +\n        \"/versions/\" +\n        MODEL_VERSION_ID +\n        \"/outputs\",\n      requestOptions\n    )\n      .then((response) => response.text())\n      .then((result) => console.log(result))\n      .catch((error) => console.log(\"error\", error));\n  };\n\n  render() {\n    return (\n      <div className=\"App\">\n        <CreateParticles />\n        <Navigation />\n        <Logo />\n        <Rank />\n        <ImageLinkForm\n          onInputChange={this.onInputChange}\n          onButtonSubmit={this.onButtonSubmit}\n        />\n        <FaceRecognition imageUrl={this.state.imageUrl} />\n      </div>\n    );\n  }\n}\n\nexport default App;\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}